.tile-column:first-child {
  margin-bottom: $spacing;
}

.tile-group:not(:first-child) {
  margin-top: $spacing;
}

.tile-row:not(.flexible) {
  min-height: $tile-size;
  .tile {
    height: $tile-size;
  }
}

.tile-row.spread-tall {
  min-height: ($tile-size * 2) + ($spacing / 2);
  .tile {
    height: ($tile-size * 2) + ($spacing / 2);
  }
}

.tile-row.spread-wide {
  padding-left: 0 !important;
  padding-right: 0 !important;
  .tile {
    float: none;
  }
}

.tile {
  > .tile-content {
    opacity: 0;
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 0;
    border-radius: $radius;
    overflow: hidden;
    > :not(.no-padding) {
      padding: $spacing;
      width: 100%; /* Stupid Safari */
    }
    img {
      width: 100%;
      border-radius: $radius;
    }
    img.bg, video.bg {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      z-index: -1;
      border-radius: $radius;
    }
    img.bg {
      opacity: 0.25;
    }
    video.bg {
    }
    img.bg.no-fade {
      opacity: 1;
    }
    > a {
      width: 100%;
      height: 100%;
      @extend .clear-fix;
    }
    > span {
      text-transform: lowercase;
      opacity: 0.75;
    }
    h1 {
      line-height: 34px;
      margin-bottom: $spacing / 2;
    }
    p a, ul a {
      border-bottom: 1px solid transparentize(white, 0.65);
    }
    p a:first-child, ul a:first-child {
      margin-left: 0;
    }
  }
}

.tile.spread {
  padding-left: 0 !important;
  padding-right: 0 !important;
  width: 100%;
}

.tile-content.central {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  justify-content: center;
  align-items: center;
  display: -webkit-flex;
  -webkit-justify-content: center;
  -webkit-align-items: center;
  * {
    text-align: center;
  }
}

.tile:not(.static) .tile-content {
  cursor: pointer;
}

.tile:not(.static) .tile-content:not(.fade) {
  transition: opacity 0.5s ease-in-out;
}

.tile:not(.static) .tile-content:not(.fade):hover {
  opacity: 1 !important;
}

@media only screen and (min-width: $r-width-1) and (max-width: $r-width-2 - 1) {

  .preserve-bottom-padding {
    padding-bottom: $spacing / 2 !important;
  }

}

@media only screen and (max-width: $r-width-2 - 1) {

  .tile-row, .tile {
    padding-top: $spacing / 2;
    padding-bottom: $spacing / 2;
  }

  .tile-group > div:first-child, .tile-group > div > div:first-child {
    padding-top: 0;
  }

  .tile-group > div:last-child, .tile-group > div > div:last-child {
    padding-bottom: 0;
  }

}

@media only screen and (min-width: $r-width-2) {

  .tile-column {
    display: inline-block;
  }

  .tile {
    float: left;
    width: 50%;
  }

  .tile-group > div {
    > *:first-child {
      padding-right: $spacing / 2;
    }
    > *:last-child {
      padding-left: $spacing / 2;
    }
  }

  .tile-group > div:not(:first-child) {
    .tile {
      padding-top: $spacing / 2;
    }
  }

  .tile-group > div:not(:last-child) .tile {
    padding-bottom: $spacing / 2;
  }

}