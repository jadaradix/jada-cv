p.
  Tomorrow is my last day at DataCentred in Manchester, where I've been working full time for the past three months on the DevOps team as a summer intern.

p.
  I came across DataCentred firstly through a university careers fair specifically for engineering and computing students &mdash; I found their work really exciting. After exchanging ~40 e-mails with HR, I was interviewed and subsequently welcomed as an intern, after which I spent the next three months learning Ruby on Rails best practices and writing a modern web application with AngularJS (now my favourite toy).

p.
  Right at the start I was unsure what to expect, but now, twelve weeksÂ later, it's clear I joined at a really exciting exciting time for DataCentred and cloud computing in general. As I come to the end of my summer internship here, I'd like to reflect on my achievements during this time.

p.
  At our site in MediaCityUK, Manchester, we're developing a next-generation data centre and open source cloud computing service. Like many &ldquo;Dev Ops&rdquo; teams, we also practice agile development, which aims to create a productive, flexible and goal-orientated way of working. This has been key to the remarkable progress so far and to us taking customers on board in record time. Our customers (including my university) are now putting our hard work to good use.

p.
  As more customers approach us with their often bespoke requirements, we've considered the best way to support them; in particular a way for them to identify issues, communicate with us effectively and also still let us practice agile development in this support itself.

p.
  Many off-the-shelf products meet these goals in many respects, but there were compelling reasons to build a support product like this in house. Firstly, the product can meet any number of our own (and our customers') specific requirements. Secondly, the product can be a &lsquo;native&rsquo; part of our existing customer-facing application. Finally, and probably most importantly, the product can integrate with JIRA, &ldquo;the tracker for teams planning and building great products&rdquo; - our go-to platform for agility. To say the least, it's really useful to track customers' issues and standard work requests - and our own platform development work - in the same JIRA environment. So, it was decided that we'd build our own bespoke, JIRA-powered system for managing Support Tickets inside our customer-facing management console.

p.
  This customer-facing management console is written in Ruby on Rails. This was my first time writing Ruby (and developing with Ruby on Rails, as it happens) after years of writing PHP for the traditional LAMP stack. Actually, it's been my first experience of agile development in the wild and writing automatically tested, production quality code at every stage. We soon made another major technical decision in that the front-end for the application would be powered by AngularJS, which would allow us to create an expressive, dynamic interface without users having to explicitly refresh the page.

p.
  The result is an attractive web application for raising support tickets and following tickets' progress until the issue is resolved. This was my main focus whilst working at DataCentred (although I also patched PHPIPAM to support decent LDAP authentication, amongst other things). The tickets are represented in (and fetched from) our JIRA instance via the JIRA API, while the front-end automatically updates via AngularJS as tickets are closed and our team communicates with the customer to whom they belong.

img(src="images/datacentred-support-tickets.png", alt="Support Tickets")

p.
  The Support Tickets system supports Markdown and Gravatar display pictures, and it's also responsive (using Bootstrap) so it looks and works nice on different devices like tablets or smartphones. Long gone are the days of developing a web application for mobile and desktop as distinctly separate platforms. Even with enterprise software, users are now expecting &ldquo;refresh automatically&rdquo; functionality as standard, which is why employing AngularJS was so important.

p.
  I've gained a lot of experience in Ruby on Rails, front-end JavaScript development, agile methodologies and  teamwork in a development context, and I've also made some great friends. But it's even more exciting and rewarding to put this real world end product into the hands of customers. It's both an asset to DataCentred and something for me to look back upon proudly for a long time.